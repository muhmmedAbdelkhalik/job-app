{
	"info": {
		"_postman_id": "mobile-job-api-collection",
		"name": "Mobile Job API",
		"description": "Complete API collection for the Mobile Job Application System",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "mobile-job-api"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Register User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"{{user_name}}\",\n    \"email\": \"{{user_email}}\",\n    \"password\": \"{{user_password}}\",\n    \"password_confirmation\": \"{{user_password}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/auth/register",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"register"
							]
						},
						"description": "Register a new user account"
					},
					"response": [],
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    if (response.success && response.data.token) {",
									"        pm.environment.set('auth_token', response.data.token);",
									"        pm.environment.set('user_id', response.data.user.id);",
									"        console.log('User registered and token saved');",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					]
				},
				{
					"name": "Login User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"{{user_email}}\",\n    \"password\": \"{{user_password}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/auth/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"login"
							]
						},
						"description": "Login with existing user credentials"
					},
					"response": [],
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    if (response.success && response.data.token) {",
									"        pm.environment.set('auth_token', response.data.token);",
									"        pm.environment.set('user_id', response.data.user.id);",
									"        console.log('User logged in and token saved');",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					]
				},
				{
					"name": "Logout User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/auth/logout",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"logout"
							]
						},
						"description": "Logout current user and revoke token"
					},
					"response": []
				}
			],
			"description": "Authentication endpoints for user registration, login, and logout"
		},
		{
			"name": "Profile Management",
			"item": [
				{
					"name": "Get Profile",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/profile",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"profile"
							]
						},
						"description": "Get current user profile information"
					},
					"response": []
				},
				{
					"name": "Update Profile",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"{{updated_name}}\",\n    \"email\": \"{{updated_email}}\",\n    \"current_password\": \"{{user_password}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/profile",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"profile"
							]
						},
						"description": "Update current user profile information"
					},
					"response": []
				}
			],
			"description": "User profile management endpoints"
		},
		{
			"name": "Job Management",
			"item": [
				{
					"name": "List Jobs",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/jobs?page=1&per_page=15&search={{job_search}}&location={{job_location}}&type={{job_type}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"jobs"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number"
								},
								{
									"key": "per_page",
									"value": "15",
									"description": "Items per page"
								},
								{
									"key": "search",
									"value": "{{job_search}}",
									"description": "Search term"
								},
								{
									"key": "location",
									"value": "{{job_location}}",
									"description": "Filter by location"
								},
								{
									"key": "type",
									"value": "{{job_type}}",
									"description": "Filter by job type"
								}
							]
						},
						"description": "Get list of job vacancies with pagination and filters"
					},
					"response": []
				},
				{
					"name": "Get Job Details",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/jobs/{{job_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"jobs",
								"{{job_id}}"
							]
						},
						"description": "Get detailed information about a specific job"
					},
					"response": []
				}
			],
			"description": "Job browsing and details endpoints"
		},
		{
			"name": "Job Applications",
			"item": [
				{
					"name": "List Applications",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/applications?page=1&per_page=15&status={{application_status}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"applications"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number"
								},
								{
									"key": "per_page",
									"value": "15",
									"description": "Items per page"
								},
								{
									"key": "status",
									"value": "{{application_status}}",
									"description": "Filter by application status"
								}
							]
						},
						"description": "Get list of user's job applications"
					},
					"response": []
				},
				{
					"name": "Get Application Details",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/applications/{{application_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"applications",
								"{{application_id}}"
							]
						},
						"description": "Get detailed information about a specific application"
					},
					"response": []
				},
				{
					"name": "Apply for Job",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"resume_id\": \"{{resume_id}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/jobs/{{job_id}}/apply",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"jobs",
								"{{job_id}}",
								"apply"
							]
						},
						"description": "Apply for a specific job using a resume"
					},
					"response": []
				}
			],
			"description": "Job application management endpoints"
		},
		{
			"name": "Resume Management",
			"item": [
				{
					"name": "List Resumes",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/resumes?page=1&per_page=15",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"resumes"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number"
								},
								{
									"key": "per_page",
									"value": "15",
									"description": "Items per page"
								}
							]
						},
						"description": "Get list of user's resumes"
					},
					"response": []
				},
				{
					"name": "Get Resume Details",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/resumes/{{resume_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"resumes",
								"{{resume_id}}"
							]
						},
						"description": "Get detailed information about a specific resume"
					},
					"response": []
				},
				{
					"name": "Upload Resume",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "resume_file",
									"type": "file",
									"src": "{{resume_file_path}}",
									"description": "Resume file (PDF, DOC, DOCX)"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/api/v1/resumes",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"resumes"
							]
						},
						"description": "Upload a new resume file"
					},
					"response": [],
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    if (response.success && response.data.id) {",
									"        pm.environment.set('resume_id', response.data.id);",
									"        console.log('Resume uploaded and ID saved');",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					]
				},
				{
					"name": "Update Resume",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"summary\": \"{{resume_summary}}\",\n    \"skills\": \"{{resume_skills}}\",\n    \"experience\": \"{{resume_experience}}\",\n    \"education\": \"{{resume_education}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/resumes/{{resume_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"resumes",
								"{{resume_id}}"
							]
						},
						"description": "Update resume information"
					},
					"response": []
				},
				{
					"name": "Delete Resume",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/resumes/{{resume_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"resumes",
								"{{resume_id}}"
							]
						},
						"description": "Delete a resume"
					},
					"response": []
				}
			],
			"description": "Resume management endpoints"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Auto-generate unique email for testing",
					"if (!pm.environment.get('user_email')) {",
					"    const timestamp = Date.now();",
					"    pm.environment.set('user_email', `testuser${timestamp}@example.com`);",
					"    pm.environment.set('user_name', `Test User ${timestamp}`);",
					"    pm.environment.set('user_password', 'password123');",
					"    pm.environment.set('updated_name', `Updated User ${timestamp}`);",
					"    pm.environment.set('updated_email', `updated${timestamp}@example.com`);",
					"}"
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:8000",
			"type": "string"
		}
	]
}
